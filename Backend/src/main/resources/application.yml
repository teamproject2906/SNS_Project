spring:
  datasource:
    url: ${JDBC_CONNECTION_DB}
    username: ${JDBC_CONNECTION_DB.USERNAME}
    password: ${JDBC_CONNECTION_DB.PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    hibernate:
      ddl-auto: create
    database: mysql
    show-sql: false
    properties:
      hibernate:
        format_sql: false
    database-platform: org.hibernate.dialect.MySQLDialect
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            scope:
              - email
              - profile
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            authorization-grant-type: authorization_code
            client-name: Google
          github:
            client-id: ${GITHUB_CLIENT_ID}
            client-secret: ${GITHUB_CLIENT_SECRET}
            scope:
              - user:email
              - read:user
          facebook:
            client-id: ${FACEBOOK_CLIENT_ID}
            client-secret: ${FACEBOOK_CLIENT_SECRET}
            scope:
              - email
              - public_profile
        provider:
          google:
            authorization-uri: https://accounts.google.com/o/oauth2/v2/auth
            token-uri: https://oauth2.googleapis.com/token
            user-info-uri: https://www.googleapis.com/oauth2/v3/userinfo
            user-name-attribute: sub
  data:
    redis:
      host: localhost
      port: 6379

  mail:
    port: 587
    host: smtp.gmail.com
    username: vandung290603@gmail.com
    password: lpdh wgdb pnkn szen
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true


application:
  security:
    jwt:
      secret-key: ${JWT_SECRET_KEY}
      expiration: 3600000 # 30000 = 30s (1000 millisecond = 1s)
      refresh-token:
        expiration: 604800000

cloudinary:
  cloud-name: ${CLOUDINARY_NAME}
  api-key: ${CLOUDINARY_API_KEY}
  api-secret: ${CLOUDINARY_API_SECRET}

gg:
  jte:
    developmentMode: true

logging:
  level:
    org.springframework.security: DEBUG

server:
  servlet:
    session:
      timeout: 30m

payment:
  vnPay:
    url: ${PAY_URL}
    tmnCode: ${TMN_CODE}
    secretKey: ${SECRET_KEY}
    returnUrl: ${RETURN_URL}
    version: ${VERSION}
    command: ${COMMAND}
    orderType: ${ORDER_TYPE}